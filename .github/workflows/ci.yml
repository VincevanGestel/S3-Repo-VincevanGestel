name: Spring Boot CI

on:
  push:
    branches:
      - main  # Trigger on push to main branch
  pull_request:
    branches:
      - main  # Trigger on pull request to main branch

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [11, 17]  # Matrix for different Java versions (11, 17)

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Java
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adoptopenjdk'  # Use AdoptOpenJDK, you can change this to 'zulu' or 'openjdk' based on your needs

      # Step 3: Cache Maven dependencies (updated to v3)
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build with Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests=false

      # Step 5: Run tests
      - name: Run tests
        run: mvn test

      # Optional Step: Deploy to your environment if tests pass
      # Add your deployment steps here, e.g. deploying to AWS, Docker, etc.
      # - name: Deploy
      #   run: <deploy-command>

      # Step 6: Archive build artifacts (updated to v3)
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: spring-boot-artifacts
          path: target/*.jar
